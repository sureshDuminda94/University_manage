/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Front_end_gpa;

import Backend_course_db.HibernateUtil;
import Bisnes_custom_impl.CourseBOImpl;
import Bisnes_custom_impl.GpaBOImpl;
import Controller.GpaController;
import DTO.GpaDTO;
import DTO.MarksTransaction;
import Dao.DAOFactory;
import Dao_custom.CourseDAO;
import Encript.Loarding_data;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.hibernate.SQLQuery;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.SessionFactory;

/**
 *
 * @author suresh
 */
public class Smester_GPA extends javax.swing.JPanel {

    Double semester_Gpa = 0.0;

    public Smester_GPA() throws Exception {
        initComponents();

        new Loarding_data().LoadDataInCombobox(student_code, "student");
        new Loarding_data().LoadDataInCombobox(semester_id, "semester");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        semester_id = new javax.swing.JComboBox<>();
        student_code = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        gpa = new javax.swing.JTable();
        semster_gpa = new javax.swing.JToggleButton();
        overall_gpa = new javax.swing.JToggleButton();
        semesterGpa = new javax.swing.JLabel();
        search = new javax.swing.JToggleButton();
        save = new javax.swing.JToggleButton();
        update_btn3 = new javax.swing.JToggleButton();
        update_btn = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(0, 0, 204), new java.awt.Color(255, 0, 0), null));

        semester_id.setFont(new java.awt.Font("Ubuntu Light", 1, 18)); // NOI18N
        semester_id.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "semester", " ", " ", " " }));
        semester_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semester_idActionPerformed(evt);
            }
        });

        student_code.setFont(new java.awt.Font("Ubuntu Light", 1, 18)); // NOI18N
        student_code.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "student_selector", " " }));
        student_code.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                student_codeActionPerformed(evt);
            }
        });

        gpa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "student_id", "semster", "student_name", "subject_id", "course_id", "credits", "grade", "grade_point", "marks", "gpa"
            }
        ));
        gpa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gpaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(gpa);

        semster_gpa.setText("semester_gpa");
        semster_gpa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semster_gpaActionPerformed(evt);
            }
        });

        overall_gpa.setText("overall_gpa");
        overall_gpa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                overall_gpaActionPerformed(evt);
            }
        });

        search.setFont(new java.awt.Font("Ubuntu Condensed", 1, 18)); // NOI18N
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        save.setFont(new java.awt.Font("Ubuntu Condensed", 1, 18)); // NOI18N
        save.setText("save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        update_btn3.setFont(new java.awt.Font("Ubuntu Condensed", 1, 18)); // NOI18N
        update_btn3.setText("Upadate");
        update_btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_btn3ActionPerformed(evt);
            }
        });

        update_btn.setFont(new java.awt.Font("Ubuntu Condensed", 1, 18)); // NOI18N
        update_btn.setText("remove");
        update_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_btnActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(204, 0, 0));
        jLabel1.setFont(new java.awt.Font("Ubuntu Mono", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 0, 255));
        jLabel1.setText("GPA_Calculation");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 926, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(45, 45, 45)
                                        .addComponent(update_btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(45, 45, 45)
                                        .addComponent(update_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(student_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(54, 54, 54)
                                        .addComponent(semester_id, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(overall_gpa, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(semster_gpa, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(semesterGpa, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(update_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(update_btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(semster_gpa, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(41, 41, 41)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(student_code, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(semester_id, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(79, 79, 79))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(semesterGpa, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(overall_gpa, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)))))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void update_btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_btn3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_update_btn3ActionPerformed

    private void update_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_btnActionPerformed
        //        try {
        //            new Loarding_data().loadAllCourse(student_table, "student");
        //        } catch (Exception ex) {
        //            Logger.getLogger(Crud_student.class.getName()).log(Level.SEVERE, null, ex);
        //        }
    }//GEN-LAST:event_update_btnActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        try {

            String semester_id = this.semester_id.getSelectedItem().toString();
            String st_id = this.student_code.getSelectedItem().toString();

            GpaDTO gpaDTO = new GpaDTO(st_id, semester_id, semester_Gpa);

            boolean result = GpaController.saveGpa(gpaDTO);

            if (result) {
                JOptionPane.showMessageDialog(this, "GPA has been saved successfully");

            } else {

                JOptionPane.showMessageDialog(this, "error");
            }
        } catch (Exception e) {
        }

    }//GEN-LAST:event_saveActionPerformed
    int i = 0;

    SessionFactory sessionFactory = HibernateUtil.getSessionFactory();
    Session session = sessionFactory.openSession();

   // int count = 0;
    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed

      
           
                Session session = sessionFactory.openSession();
            
            
            DefaultTableModel dtm = (DefaultTableModel) gpa.getModel();
            
            dtm.setRowCount(0);
           System.out.println("rowwwwwwwwwwwwwwwww"+dtm.getRowCount());
//            if(dtm.getRowCount()!=0){
//            
//              dtm.setRowCount(0);
//            
//            }
//            
  try {
            System.err.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");
            session.beginTransaction();
            String stu = student_code.getSelectedItem().toString();

            SQLQuery query1 = session.createSQLQuery("SELECT student_name,subject_id, course_id ,grade, grade_point ,semester,marks FROM MarksEntity m, StudentEntity s where " + "m.student_id=:stId AND s.student_id=:stId");
            query1.setParameter("stId", stu);
            List<Object[]> list2 = query1.list();

            //  System.err.println("data=================" + list2.get(0));
           // SQLQuery query = session.createSQLQuery("select credits from SubjectEntity where subjec_code=:id");

         //   query.setParameter("id", stu);
            System.err.println("________________________________________");

            MarksTransaction m = new MarksTransaction();

            System.err.println("________________________________________"+list2.size());

            for (Iterator it = list2.iterator(); it.hasNext();) {
                Object[] ra = (Object[]) it.next();
                MarksTransaction mt = new MarksTransaction();
                mt.setStudent_id(stu);
                mt.setName(ra[0].toString());

                System.out.println("0_____________name_" + mt.getName());

                //  System.err.println("1________________________________________"+mt.getSubject_id());
                mt.setSubject_id(ra[1].toString());
                System.out.println("______________subject_**********" + mt.getSubject_id());
                mt.setCourse_id(ra[2].toString());

                System.out.println("______________course_" + mt.getCourse_id());

                mt.setGrade(ra[3].toString());
                System.out.println("3_______ grade" + mt.getGrade().toString());

                System.out.println("======================grade" + mt.getGrade());

                mt.setGrade_pont(Double.valueOf(ra[4].toString()));//
                System.out.println("======================grade point" + mt.getGrade_pont().toString());

                System.out.println("befer" + ra[5].toString());
                mt.setSemester(ra[5].toString());//semester
                System.out.println(ra[5].toString());

                System.err.println("marks" + mt.getSemester());

                mt.setMarks(Integer.parseInt(ra[6].toString()));//marks

                System.err.println("marks" + mt.getMarks());

                GpaBOImpl g = new GpaBOImpl();

                String creditsDir = g.getCredits(mt.getSubject_id());
                System.out.println("data___________________+++" + creditsDir);

                mt.setCredits(creditsDir);

                //  mt.setGrade_pont(Double.valueO0f(ra[].toString()));
                System.err.println("credits________" + mt.getCredits());

                Object[] raw = {
                    mt.getStudent_id(),
                    mt.getSemester(),
                    mt.getName(),
                    mt.getSubject_id(),
                    mt.getCourse_id(),
                    mt.getCredits(),
                    mt.getGrade(),
                    mt.getGrade_pont(),
                    mt.getMarks(),};

                System.err.println("loard gpa to table");
                dtm.addRow(raw);
               int count= dtm.getRowCount();
                //String gpa_data = semesterGpa.toString();

              //  SessionFactory sessionFactory = HibernateUtil.getSessionFactory();
                //Session session = sessionFactory.openSession();
                //String stIdr = student_code.getSelectedItem().toString();
               // SQLQuery gpaQuery = session.createSQLQuery("select gpa  from GpaEntity where student_id:= stId");

               // gpaQuery.setParameter("stId", stIdr);
               //// List<Object[]> result = gpaQuery.list();
               // Object gpa = result.get(0);

              //  String gpaData = (String) gpa;
               // dtm.setValueAt(gpa, count - 1, 9);
                System.err.println("/////////////////////////////=" + semesterGpa.toString());
               // System.err.println("&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&=" + gpa_data);
                System.err.println("&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&=" + semesterGpa.getText());
               // this.gpa.setValueAt(gpaData, count - 1, 9);
                
                  Loarding_data ld = new Loarding_data();
           Double d = ld.gpaValue(stu);
               System.err.println("#######################################################"+d);
               
               if(d!=0){
               
                   dtm.setValueAt(d,count-1, 9);
               }
               
//                
                System.out.println("end table loarding" +dtm.getRowCount());
            }
            
            

            session.getTransaction().commit();
            
         

        } catch (Exception e) {
        }
  
   session.close();
    }//GEN-LAST:event_searchActionPerformed

    private void overall_gpaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_overall_gpaActionPerformed

        Double gpa_val = .0;
        int sum_of_credits = 0;
        try {
            List< MarksTransaction> m;

            m = new GpaBOImpl().getStudentMarksById(student_code.getSelectedItem().toString(), semester_id.getSelectedItem().toString());

            for (MarksTransaction mt : m) {
                String sbId = mt.getSubject_id();
                System.out.println("//////////////////////////////////////////////" + sbId);
                String credits;

                credits = new GpaBOImpl().getCredits(sbId);

                mt.setCredits(credits);
                sum_of_credits += Integer.parseInt(credits);
                System.err.println("credits __________" + credits);
                gpa_val += mt.getGrade_pont() * Integer.parseInt(credits);
                System.out.println("gpa_val_???????????????????????????????" + gpa_val);
                System.out.println("sum_???????????????????????????????" + sum_of_credits);
            }

            String sem_gpa = "" + (gpa_val / sum_of_credits);
            System.out.println("ovrl_gpa_val_???????????????????????????????" + sem_gpa + (gpa_val / sum_of_credits));
            semesterGpa.setText(sem_gpa);

        } catch (Exception e) {
        }
        //        try {
        //            new GpaBOImpl().calculateGpa(student_code.getSelectedItem().toString(), semester.getSelectedItem().toString());
        //        } catch (Exception ex) {
        //            Logger.getLogger(Smester_GPA.class.getName()).log(Level.SEVERE, null, ex);
        //        }
    }//GEN-LAST:event_overall_gpaActionPerformed

    private void semster_gpaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semster_gpaActionPerformed

        Double gpa_val = .0;
        int sum_of_credits = 0;
        System.out.println("////////////////////////////////////////////////////");

        try {

            SessionFactory sessionFactory = HibernateUtil.getSessionFactory();

            Session session = sessionFactory.openSession();

            session.beginTransaction();

            System.err.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");
            // SQLQuery query = session.createSQLQuery("SELECT course_id ,subject_id FROM MarksEntity WHERE student_id = 's1' ");

            //  SQLQuery query = session.createSQLQuery("SELECT credits FROM SubjectEntity where subject_id=");
            SQLQuery query = session.createSQLQuery("SELECT student_name,subject_id, course_id ,grade, grade_point ,semester,marks FROM MarksEntity m, StudentEntity s where m.semester=:semester_i  AND m.student_id=:stId And s.student_id=:stId");

            String semester = semester_id.getSelectedItem().toString();
            String stId = student_code.getSelectedItem().toString();

            query.setParameter("semester_i", semester);
            query.setParameter("stId", stId);

            System.out.println("------------------________________");

            List<Object[]> rowss = query.list();
            System.out.println("data____________________________________________________");
            //  System.out.println("++++++++++++++++++" + rowss.get(0).toString());

            for (Iterator it = rowss.iterator(); it.hasNext();) {
                Object[] ra = (Object[]) it.next();
                MarksTransaction mt = new MarksTransaction();
                System.err.println("_____________________________________________________________________");
                System.out.println("===============================0" + ra[0]);
                mt.setName(ra[0].toString());
                System.out.println("===============================1" + ra[1]);
                mt.setSubject_id(ra[1].toString());
                System.out.println("===============================2" + ra[2]);
                mt.setCourse_id(ra[2].toString());

                System.out.println("===============================3" + ra[3]);
                mt.setGrade(ra[3].toString());
                System.out.println("===============================4" + ra[4]);
                mt.setGrade_pont(Double.valueOf(ra[4].toString()));
                System.out.println("===============================5" + ra[5]);
                mt.setSemester(ra[5].toString());
                System.out.println("===============================6" + ra[6]);
                mt.setMarks(Integer.parseInt(ra[6].toString()));

                mt.setStudent_id(student_code.getSelectedItem().toString());

                String subId = mt.getSubject_id();

                String credits = new GpaBOImpl().getCredits(subId);

                mt.setCredits(credits);
                sum_of_credits += Integer.parseInt(credits);
                System.err.println("credits __________" + credits);
                System.err.println("grade pont" + mt.getGrade_pont());
                gpa_val += mt.getGrade_pont() * Integer.parseInt(credits);
                System.out.println("gpa_val_???????????????????????????????" + gpa_val);
                System.out.println("sum_???????????????????????????????" + sum_of_credits);
            }

            Loarding_data ld = new Loarding_data();
            Double d = ld.gpaValue(stId);
            
            System.err.println("############################################" + d);

            session.getTransaction().commit();
            session.close();

            String sem_gpa = "" + (gpa_val / sum_of_credits);
            semester_Gpa = gpa_val / sum_of_credits;
            System.out.println("ovrl_gpa_val_???????????????????????????????" + sem_gpa + (gpa_val / sum_of_credits));
            semesterGpa.setText(sem_gpa);

        } catch (Exception e) {
        }

    }//GEN-LAST:event_semster_gpaActionPerformed

    private void student_codeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_student_codeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_student_codeActionPerformed

    private void semester_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semester_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_semester_idActionPerformed

    private void gpaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gpaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_gpaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable gpa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton overall_gpa;
    private javax.swing.JToggleButton save;
    private javax.swing.JToggleButton search;
    private javax.swing.JLabel semesterGpa;
    private javax.swing.JComboBox<String> semester_id;
    private javax.swing.JToggleButton semster_gpa;
    private javax.swing.JComboBox<String> student_code;
    private javax.swing.JToggleButton update_btn;
    private javax.swing.JToggleButton update_btn3;
    // End of variables declaration//GEN-END:variables
}
